@page "/manageadmins"
@rendermode InteractiveServer
<PageTitle>Admin Management</PageTitle>

@using AbiWebsite.Components.Shared
@using AbiWebsite.Data
@using AbiWebsite.Models
@using AbiWebsite.Models.ViewModels
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.Authorization

@inject AbiDbContext Db
@inject AuthenticationStateProvider AuthProvider
@inject NavigationManager Navigation
@inject IConfiguration Configuration

<h3>Admin Dashboard</h3>

<AdminGate>
    <div class="ranking-container">
        <h4>Admin-Verwaltung</h4>
        <div class="row">
            <div class="col">
                <h5>Admins</h5>
                <table class="table table-dark table-striped">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Tutor</th>
                            <th>Aktionen</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var admin in adminUsers)
                        {
                            <tr>
                                <td>@admin.FullName</td>
                                <td>@admin.Tutor</td>
                                <td>
                                    @if (admin.Id != currentUserId)
                                    {
                                        <button class="btn btn-danger btn-sm" @onclick="() => RemoveAdmin(admin.Id)">Admin entfernen</button>
                                    }
                                    else
                                    {
                                        <span class="text-white">Du</span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="col">
                <h5>Nicht-Admins</h5>
                <table class="table table-dark table-striped">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Tutor</th>
                            <th>Aktionen</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in approvedNonAdmins)
                        {
                            <tr>
                                <td>@user.FullName</td>
                                <td>@user.Tutor</td>
                                <td>
                                    <button class="btn btn-success btn-sm" @onclick="() => AddAdmin(user.Id)">Als Admin hinzufügen</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    @code {
        private int currentUserId;

        private List<Student> adminUsers = new();
        private List<Student> approvedNonAdmins = new();

        protected override async Task OnInitializedAsync()
        {
            await LoadData();
        }

        private async Task LoadData()
        {
            adminUsers = await Db.Students.Where(s => s.IsAdmin).ToListAsync();
            approvedNonAdmins = await Db.Students.Where(s => !s.IsAdmin).ToListAsync();
        }

        private void AddAdmin(int studentId)
        {
            var student = Db.Students.Find(studentId);
            if (student != null)
            {
                student.IsAdmin = true;
                Db.SaveChanges();
                LoadData();
                StateHasChanged();
            }
        }

        private void RemoveAdmin(int studentId)
        {
            var student = Db.Students.Find(studentId);
            if (student != null)
            {
                student.IsAdmin = false;
                Db.SaveChanges();
                LoadData();
                StateHasChanged();
            }
        }
    }
</AdminGate>