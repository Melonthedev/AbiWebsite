@using AbiWebsite.Data
@using Microsoft.AspNetCore.Components.Authorization
@rendermode InteractiveServer
@inject AuthenticationStateProvider AuthProvider
@inject AbiDbContext Db
@inject NavigationManager Navigation

<div class="ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Abi Winfriedschule 👍</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="nav flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="mottoranking">
                <span class="bi bi-bar-chart-fill" style="margin-top: -22px" aria-hidden="true"></span> Motto Ranking
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Counter
            </NavLink>
        </div>
        @if (isAdmin)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="admin">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Admin Dashboard
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="students">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Schülerdatenbank
                </NavLink>
            </div>
        }
        @if (!string.IsNullOrEmpty(name) && !string.IsNullOrEmpty(tutor)) {
            <div class="profile-btn-container d-flex justify-content-center align-items-center my-3 m-3">
                <button class="btn btn-outline-secondary px-4 py-2 w-100 text-white" style="max-width: 340px; "
                        @onclick='() => Navigation.NavigateTo("/profile")'>
                    <i class="bi bi-person-circle me-2"></i>
                    <span class="profile-name">@name <span class="text-white" style="font-size:0.95em;">(@tutor)</span></span>
                </button>
            </div>
        } else {
            <div class="profile-btn-container d-flex justify-content-center align-items-center my-3 m-3">
                <button class="btn btn-outline-secondary px-4 py-2 w-100 text-white" style="max-width: 340px; "
                        @onclick='() => Navigation.NavigateTo("/login")'>
                    <i class="bi bi-person-circle me-2"></i>
                    <span class="profile-name">Login</span>
                </button>
            </div>
        }
    </nav>
   
</div>



@code {
    private string? name;
    private string? tutor;
    private string? nickname;
    private int studentId;
    private bool isAdmin;

    protected override async Task OnInitializedAsync()
    {
        var state = await AuthProvider.GetAuthenticationStateAsync();
        var user = state.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            var idClaim = user.FindFirst("StudentId")?.Value;
            int? userID = idClaim != null ? int.Parse(idClaim) : null;
            var student = await Db.Students.FindAsync(userID);
            if (student != null)
            {
                isAdmin = student.IsAdmin;
                name = student.FullName;
                tutor = student.Tutor;
            }
        }
    }
}
