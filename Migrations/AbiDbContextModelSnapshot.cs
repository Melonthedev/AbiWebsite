// <auto-generated />
using AbiWebsite.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AbiWebsite.Migrations
{
    [DbContext(typeof(AbiDbContext))]
    partial class AbiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("AbiWebsite.Models.MottoSuggestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("MottoSuggestions");
                });

            modelBuilder.Entity("AbiWebsite.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nickname")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("Traits")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tutor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("AbiWebsite.Models.Vote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MottoSuggestionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MottoSuggestionId");

                    b.HasIndex("StudentId", "MottoSuggestionId")
                        .IsUnique();

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("AbiWebsite.Models.MottoSuggestion", b =>
                {
                    b.HasOne("AbiWebsite.Models.Student", "Student")
                        .WithMany("Suggestions")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AbiWebsite.Models.Vote", b =>
                {
                    b.HasOne("AbiWebsite.Models.MottoSuggestion", "MottoSuggestion")
                        .WithMany("Votes")
                        .HasForeignKey("MottoSuggestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AbiWebsite.Models.Student", "Student")
                        .WithMany("Votes")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MottoSuggestion");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AbiWebsite.Models.MottoSuggestion", b =>
                {
                    b.Navigation("Votes");
                });

            modelBuilder.Entity("AbiWebsite.Models.Student", b =>
                {
                    b.Navigation("Suggestions");

                    b.Navigation("Votes");
                });
#pragma warning restore 612, 618
        }
    }
}
